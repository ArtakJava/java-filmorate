CREATE TABLE IF NOT EXISTS PUBLIC.USERS (
	USER_ID INTEGER NOT NULL AUTO_INCREMENT,
	EMAIL CHARACTER VARYING NOT NULL,
	LOGIN CHARACTER VARYING NOT NULL,
	NAME CHARACTER VARYING NOT NULL,
	BIRTHDAY DATE NOT NULL,
	CONSTRAINT USERS_PK PRIMARY KEY (USER_ID)
);
CREATE UNIQUE INDEX IF NOT EXISTS PRIMARY_KEY_4 ON PUBLIC.USERS (USER_ID);
CREATE INDEX IF NOT EXISTS USERS_FK_INDEX_4 ON PUBLIC.USERS (EMAIL);

CREATE TABLE IF NOT EXISTS PUBLIC.GENRE (
	GENRE_ID INTEGER NOT NULL AUTO_INCREMENT,
	NAME CHARACTER VARYING NOT NULL,
	CONSTRAINT GENRE_PK PRIMARY KEY (GENRE_ID)
);
CREATE UNIQUE INDEX IF NOT EXISTS PRIMARY_KEY_40 ON PUBLIC.GENRE (GENRE_ID);

CREATE TABLE IF NOT EXISTS PUBLIC.MPA (
	MPA_ID INTEGER NOT NULL AUTO_INCREMENT,
	MPA_NAME CHARACTER VARYING NOT NULL,
	CONSTRAINT MPA_PK PRIMARY KEY (MPA_ID)
);
CREATE UNIQUE INDEX IF NOT EXISTS PRIMARY_KEY_1 ON PUBLIC.MPA (MPA_ID);

CREATE TABLE IF NOT EXISTS PUBLIC.FILMS (
	FILM_ID INTEGER NOT NULL AUTO_INCREMENT,
	NAME CHARACTER VARYING NOT NULL,
	DESCRIPTION CHARACTER VARYING NOT NULL,
	RELEASE_DATE DATE NOT NULL,
	DURATION INTEGER NOT NULL,
	MPA_ID INTEGER NOT NULL,
	CONSTRAINT FILMS_FK FOREIGN KEY (MPA_ID) REFERENCES MPA(MPA_ID),
	CONSTRAINT FILMS_PK PRIMARY KEY (FILM_ID)
);
CREATE INDEX IF NOT EXISTS FILMS_FK_INDEX_3 ON PUBLIC.FILMS (MPA_ID);
CREATE UNIQUE INDEX IF NOT EXISTS PRIMARY_KEY_8 ON PUBLIC.FILMS (FILM_ID);

ALTER TABLE PUBLIC.FILMS ADD CONSTRAINT IF NOT EXISTS FILMS_FK FOREIGN KEY (MPA_ID) REFERENCES PUBLIC.MPA(MPA_ID) ON DELETE RESTRICT ON UPDATE RESTRICT;

CREATE TABLE IF NOT EXISTS PUBLIC.CATEGORY (
    CATEGORY_ID INTEGER NOT NULL AUTO_INCREMENT,
	FILM_ID INTEGER NOT NULL,
	GENRE_ID INTEGER NOT NULL,
	CONSTRAINT CATEGORY_FK FOREIGN KEY (FILM_ID) REFERENCES FILMS(FILM_ID),
	CONSTRAINT CATEGORY_FK_1 FOREIGN KEY (GENRE_ID) REFERENCES GENRE(GENRE_ID),
	CONSTRAINT CATEGORY_PK PRIMARY KEY (CATEGORY_ID)
);
CREATE INDEX IF NOT EXISTS CATEGORY_FK_1_INDEX_3 ON PUBLIC.CATEGORY (GENRE_ID);
CREATE INDEX IF NOT EXISTS CATEGORY_FK_INDEX_3 ON PUBLIC.CATEGORY (FILM_ID);
CREATE UNIQUE INDEX IF NOT EXISTS PRIMARY_KEY_31 ON PUBLIC.CATEGORY (CATEGORY_ID);

ALTER TABLE PUBLIC.CATEGORY ADD CONSTRAINT IF NOT EXISTS CATEGORY_FK FOREIGN KEY (FILM_ID) REFERENCES PUBLIC.FILMS(FILM_ID) ON DELETE RESTRICT ON UPDATE RESTRICT;
ALTER TABLE PUBLIC.CATEGORY ADD CONSTRAINT IF NOT EXISTS CATEGORY_FK_1 FOREIGN KEY (GENRE_ID) REFERENCES PUBLIC.GENRE(GENRE_ID) ON DELETE RESTRICT ON UPDATE RESTRICT;

CREATE TABLE IF NOT EXISTS PUBLIC.LIKES (
    LIKE_ID INTEGER NOT NULL AUTO_INCREMENT,
	FILM_ID INTEGER NOT NULL,
	USER_ID INTEGER NOT NULL,
	CONSTRAINT LIKES_FK FOREIGN KEY (FILM_ID) REFERENCES FILMS(FILM_ID),
	CONSTRAINT LIKES_FK1 FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID),
	CONSTRAINT LIKES_PK PRIMARY KEY (FILM_ID,USER_ID)
);
CREATE INDEX IF NOT EXISTS LIKES_FK1_INDEX_7 ON PUBLIC.LIKES (USER_ID);
CREATE INDEX IF NOT EXISTS LIKES_FK_INDEX_7 ON PUBLIC.LIKES (FILM_ID);
CREATE UNIQUE INDEX IF NOT EXISTS PRIMARY_KEY_7A ON PUBLIC.LIKES (LIKE_ID);

ALTER TABLE PUBLIC.LIKES ADD CONSTRAINT IF NOT EXISTS LIKES_FK FOREIGN KEY (FILM_ID) REFERENCES PUBLIC.FILMS(FILM_ID) ON DELETE RESTRICT ON UPDATE RESTRICT;
ALTER TABLE PUBLIC.LIKES ADD CONSTRAINT IF NOT EXISTS LIKES_FK1 FOREIGN KEY (USER_ID) REFERENCES PUBLIC.USERS(USER_ID) ON DELETE RESTRICT ON UPDATE RESTRICT;

CREATE TABLE IF NOT EXISTS PUBLIC.FRIENDS (
    FRIENDSHIP_ID INTEGER NOT NULL AUTO_INCREMENT,
	USER_ID INTEGER NOT NULL,
	FRIEND_ID INTEGER NOT NULL,
	CONFIRM_FRIENDSHIP BOOLEAN NOT NULL,
	CONSTRAINT FRIENDS_FK FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID),
	CONSTRAINT FRIENDS_FK1 FOREIGN KEY (FRIEND_ID) REFERENCES USERS(USER_ID),
	CONSTRAINT FRIENDS_PK PRIMARY KEY (FRIENDSHIP_ID)
);
CREATE INDEX IF NOT EXISTS FRIENDS_FK1_INDEX_7 ON PUBLIC.FRIENDS (FRIEND_ID);
CREATE INDEX IF NOT EXISTS FRIENDS_FK_INDEX_7 ON PUBLIC.FRIENDS (USER_ID);
CREATE UNIQUE INDEX IF NOT EXISTS PRIMARY_KEY_75 ON PUBLIC.FRIENDS (FRIENDSHIP_ID);

ALTER TABLE PUBLIC.FRIENDS ADD CONSTRAINT IF NOT EXISTS FRIENDS_FK FOREIGN KEY (USER_ID) REFERENCES PUBLIC.USERS(USER_ID) ON DELETE RESTRICT ON UPDATE RESTRICT;
ALTER TABLE PUBLIC.FRIENDS ADD CONSTRAINT IF NOT EXISTS FRIENDS_FK1 FOREIGN KEY (FRIEND_ID) REFERENCES PUBLIC.USERS(USER_ID) ON DELETE RESTRICT ON UPDATE RESTRICT;